apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-redis-cm
  labels:
    app.kubernetes.io/name: argocd-redis
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: redis
data:
  init.sh: |
    echo "$(date) Start..."
    REDIS_CONF=/data/conf/redis.conf
  
    mkdir -p /data/conf

    echo "Copying default redis config.."
    cp /readonly-config/redis.conf "${REDIS_CONF}"

    # Determine which source to use for the Redis password
    if [ -n "${REDIS_CREDS_FILE_PATH}" ] && [ -f "${REDIS_CREDS_FILE_PATH}/auth" ]; then
      file_auth="$(< "${REDIS_CREDS_FILE_PATH}/auth" tr -d '\n\r')"
      if [ -n "$file_auth" ]; then
        echo "Retrieved Redis credentials from file."
        REDIS_PASSWORD="$file_auth"
      elif [ -n "${REDIS_PASSWORD:-}" ]; then
        echo "Retrieved Redis password from environment (file was empty)."
      else
        echo "ERROR: Redis credential file is empty and no environment variable set."
        exit 1
      fi

    elif [ -n "${REDIS_PASSWORD:-}" ]; then
      # No valid file, but env var is set
      echo "Retrieved Redis password from environment."
    else
      # Neither source provided anything
      echo "WARNING: Redis password not set via file or environment."
      exit 1
    fi

    echo "Setting redis auth values.."
    ESCAPED_AUTH=$(echo "${REDIS_PASSWORD}" | sed -e 's/[\/&]/\\&/g');
    sed -i "s/replace-default-auth/${ESCAPED_AUTH}/" "${REDIS_CONF}"

    echo "$(date) Ready..."
  redis.conf: |
    # Redis configuration file template

    dir "/data"
    port 6379
    bind 0.0.0.0
    appendonly no
    save ""
    requirepass replace-default-auth

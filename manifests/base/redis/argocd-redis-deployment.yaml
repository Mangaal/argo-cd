apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: argocd-redis
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: redis
  name: argocd-redis
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-redis
    spec:
      initContainers:
        - command:
            - argocd
            - admin
            - redis-initial-password
          image: quay.io/argoproj/argocd:latest
          imagePullPolicy: IfNotPresent
          name: secret-init
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
        - name: config-init
          image: redis:7.2.7-alpine
          command: 
          - "sh"
          - "/readonly-config/init.sh"
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: auth
                  name: argocd-redis
            - name: REDIS_CREDS_FILE_PATH
              value: "/run/secrets/argocd/redis-auth"
          volumeMounts:
            - name: config
              mountPath: /readonly-config
            - name: data
              mountPath: /data
            - name: redis-creds
              mountPath: "/run/secrets/argocd/redis-auth"
              readOnly: true
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault      
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: argocd-redis        
      containers:
      - name: redis
        image: redis:8.2.1-alpine
        imagePullPolicy: Always
        args:
        - "redis-server"
        - "/data/conf/redis.conf"
        ports:
        - containerPort: 6379
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
          - name: data
            mountPath: /data   
      volumes:
        - name: config
          configMap:
            name: argocd-redis-configmap
        - name: data
          emptyDir: {}
        - name: redis-creds
          secret:
            secretName: argocd-redis
            items:
              - key: auth
                path: auth
            optional: true  
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: argocd-redis
              topologyKey: kubernetes.io/hostname
          - weight: 5
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/part-of: argocd
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux